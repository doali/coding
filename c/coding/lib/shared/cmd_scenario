#!/usr/bin/env bash
set -x
# ==============================================================================
# Scenario
# ------------------------------------------------------------------------------
# - object files .o
# - dynamic lib .so
# - executable file 
#   - contains a table used to handle the .so
#   - before being ran, OS loads the .so (if not already loaded) <= dynamic linking
#   - .so code (object code) is outside this executable file
#   - .so modified => compilation might not be necessary (depends on the modifications !! .h ?)
# ==============================================================================
readonly LIB_PATH=/usr/lib
readonly INCLUDE_PATH=/usr/include
# ------------------------------------------------------------------------------
# compilation
gcc -c operation.c # generates operation.o
# ------------------------------------------------------------------------------
# dynamic lib command
gcc -shared -o liboperation.so operation.o # generates liboperation.so
# ------------------------------------------------------------------------------
nm operation.o # show symbols {T: defined, U:undefined}
nm liboperation.so # idem, show table symbols
# ------------------------------------------------------------------------------
file liboperation.so 
# ------------------------------------------------------------------------------
# compile and link 
sudo cp liboperation.so ${LIB_PATH}
sudo cp operation.h ${INCLUDE_PATH}
gcc -o main.exe main.c -loperation
# ------------------------------------------------------------------------------
# run
./main.exe 
./main.exe 7 2
# ------------------------------------------------------------------------------
# Examine an executable and display a list of the shared librairies needed
ldd main.exe # list dynamic link (ldd) libraries
# ------------------------------------------------------------------------------
