#!/usr/bin/env bash
# ------------------------------------------------------------------------------
# A few gcc commands
# ------------------------------------------------------------------------------
#gcc hello.c        # generates executable a.out
#                   # .o files are generated in /tmp then deleted
#gcc -o exe hello.c # generates executable named exe
#                   # .o files are generated in /tmp then deleted
#gcc -S hello.c     # generates assemble code (.s)
#gcc -c hello.c     # .h correspondant au niveau du .c sinon utiliser l'option -I
#gcc -o exe hello.o # generates executable exe from object code hello.o
# ------------------------------------------------------------------------------
#gcc -o hello.exe hello.c

## https://developer.gnome.org/glib/stable/glib-compiling.html
# To know how to include header
# command@todo $ pkg-config --cflags glib-2.0
# => -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
# # command@todo $ pkg-config --libs glib-2.0
# => -L/usr/lib -lm -lglib-2.0

# Simple command to compile with glib
#gcc -o basics basics.c -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -lglib-2.0

# More friendly command
if [ $# == 1 ]; then
	gcc -ggdb -o "${1%.*}" ${1} -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -lglib-2.0
else
	echo ${0} "<filename.c>"
fi
